package com.rixon.ramodage.strategy;

import com.rixon.ramodage.strategy.record.RecordCreationContext;
import com.rixon.ramodage.strategy.record.RecordCreationStrategy;

import java.io.IOException;

/**
 * This is the simplest strategy for generating the files. Each field in the record is independent of the other. The file is generated by
 * randomly generating each field value
 * User: rixon
 * Date: 20/01/13
 * Time: 8:33 PM

 */
public class RandomFileGenerationStrategy<TYPE> extends AbstractDataGenerationStrategy<TYPE> {


    @Override
    protected void populateDataForSplit(String split, String taskId) throws IOException {
        RecordCreationStrategy recordCreationStrategy = RecordCreationContext.strategyFor(schema.getType());
        long maxRecords = options.getNumberOfRecordsPerSplit();
        for (int i = 0; i < maxRecords; i++) {
            String record = recordCreationStrategy.createRecord(schema, options, i);
            this.dataDestination.addRecord(split,record);
            progressReporter.updateThreadProgress(taskId, (i + 1) * 100.0f / maxRecords);
        }
    }
}